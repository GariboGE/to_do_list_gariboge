name: To Do List Tests

on:
  push:
    branches:
      - dev

jobs:
  run-tests:
    runs-on: ubuntu-22.04

    env:
      OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
      OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
      OAUTH_REDIRECT_URI: http://localhost:5000/oauth/auth/callback

    steps:

      # üöÄ 1. Checkout del c√≥digo fuente
      - name: Checkout code
        uses: actions/checkout@v3

      # üêç 2. Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # üì¶ 3. Instalar dependencias de Python
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # üõ†Ô∏è 4. Instalar dependencias del sistema y multimedia
      - name: Update and Install System Dependencies
        run: |
          sudo apt update && sudo apt upgrade -y

          # Habilitar repositorios adicionales necesarios
          sudo add-apt-repository multiverse -y
          sudo add-apt-repository universe -y
          sudo add-apt-repository restricted -y
          sudo apt update

          # Instalar paquetes multimedia y soporte adicional
          sudo apt install -y \
            ffmpeg \
            libavcodec-extra \
            libx264 \
            libavif-dev \
            libssl-dev \
            ubuntu-restricted-extras

          # Verificar la instalaci√≥n de libx264
          ffmpeg -codecs | grep libx264
          sudo apt-get install yasm libvpx. libx264
          sudo apt-get install libx264-142 libx264-dev
          sudo apt update && sudo apt upgrade -y

      # üöÄ Ejecutar Flask (Test App)
      - name: Run Flask (Test App)
        run: |
          export FLASK_APP=app.py
          flask run --host=localhost --port=5000 &

      # ‚úÖ Ejecutar pytest para pruebas y cobertura
      - name: Run tests
        run: |
          pytest --cov=app --cov-report=html
